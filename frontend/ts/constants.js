export const NFT_STORAGE_TOKEN =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDU4MDY4N0Q0QjU4M0M4MDYyYjhGODcwNzQwRDg3MGQ5NUIwRGQ4NUIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTcwNzQyODc3NjI0NywibmFtZSI6IlRlc3QifQ.MxIq9_MxyqECzJAzI_Jzpce-jJs_9Sm8vmE5DD9rRN0";

export const contractAddress = "0xcbeaf3bde82155f56486fb5a1072cb8baaf547cc";
export const blockFundingAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "createNewProject",
    inputs: [
      {
        name: "_data",
        type: "tuple",
        internalType: "struct BlockFundingProject.ProjectData",
        components: [
          { name: "campaignStartingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "campaignEndingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "estimatedProjectReleaseDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "targetWallet", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "totalFundsHarvested", type: "uint96", internalType: "uint96" },
          { name: "projectCategory", type: "uint8", internalType: "enum BlockFunding.ProjectCategory" },
          { name: "name", type: "string", internalType: "string" },
          { name: "subtitle", type: "string", internalType: "string" },
          { name: "description", type: "string", internalType: "string" },
          { name: "mediaURI", type: "string", internalType: "string" },
          {
            name: "teamMembers",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.TeamMember[]",
            components: [
              { name: "firstName", type: "string", internalType: "string" },
              { name: "lastName", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "photoLink", type: "string", internalType: "string" },
              { name: "role", type: "string", internalType: "string" },
              { name: "walletAddress", type: "address", internalType: "address" },
            ],
          },
          {
            name: "projectSteps",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.ProjectStep[]",
            components: [
              { name: "name", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "amountNeeded", type: "uint96", internalType: "uint96" },
              { name: "amountFunded", type: "uint96", internalType: "uint96" },
              { name: "isFunded", type: "bool", internalType: "bool" },
              { name: "orderNumber", type: "uint8", internalType: "uint8" },
              { name: "hasBeenValidated", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getProjects",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct BlockFundingProject.ProjectData[]",
        components: [
          { name: "campaignStartingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "campaignEndingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "estimatedProjectReleaseDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "targetWallet", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "totalFundsHarvested", type: "uint96", internalType: "uint96" },
          { name: "projectCategory", type: "uint8", internalType: "enum BlockFunding.ProjectCategory" },
          { name: "name", type: "string", internalType: "string" },
          { name: "subtitle", type: "string", internalType: "string" },
          { name: "description", type: "string", internalType: "string" },
          { name: "mediaURI", type: "string", internalType: "string" },
          {
            name: "teamMembers",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.TeamMember[]",
            components: [
              { name: "firstName", type: "string", internalType: "string" },
              { name: "lastName", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "photoLink", type: "string", internalType: "string" },
              { name: "role", type: "string", internalType: "string" },
              { name: "walletAddress", type: "address", internalType: "address" },
            ],
          },
          {
            name: "projectSteps",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.ProjectStep[]",
            components: [
              { name: "name", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "amountNeeded", type: "uint96", internalType: "uint96" },
              { name: "amountFunded", type: "uint96", internalType: "uint96" },
              { name: "isFunded", type: "bool", internalType: "bool" },
              { name: "orderNumber", type: "uint8", internalType: "uint8" },
              { name: "hasBeenValidated", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProjectsAddresses",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "projects",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  { type: "function", name: "renounceOwnership", inputs: [], outputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  { type: "event", name: "NewProjectHasBeenCreated", inputs: [], anonymous: false },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
      { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  { type: "error", name: "AProjectIsAlreadyLiveFromThisOwner", inputs: [] },
  { type: "error", name: "ERC1167FailedCreateClone", inputs: [] },
  { type: "error", name: "OwnableInvalidOwner", inputs: [{ name: "owner", type: "address", internalType: "address" }] },
  { type: "error", name: "OwnableUnauthorizedAccount", inputs: [{ name: "account", type: "address", internalType: "address" }] },
];
export const blockFundingProjectAbi = [
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "addMessage",
    inputs: [{ name: "ipfsHash", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "askForMoreFunds",
    inputs: [{ name: "amountAsked", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "data",
    inputs: [],
    outputs: [
      { name: "campaignStartingDateTimestamp", type: "uint32", internalType: "uint32" },
      { name: "campaignEndingDateTimestamp", type: "uint32", internalType: "uint32" },
      { name: "estimatedProjectReleaseDateTimestamp", type: "uint32", internalType: "uint32" },
      { name: "targetWallet", type: "address", internalType: "address" },
      { name: "owner", type: "address", internalType: "address" },
      { name: "totalFundsHarvested", type: "uint96", internalType: "uint96" },
      { name: "projectCategory", type: "uint8", internalType: "enum BlockFunding.ProjectCategory" },
      { name: "name", type: "string", internalType: "string" },
      { name: "subtitle", type: "string", internalType: "string" },
      { name: "description", type: "string", internalType: "string" },
      { name: "mediaURI", type: "string", internalType: "string" },
    ],
    stateMutability: "view",
  },
  { type: "function", name: "endFundingCampaign", inputs: [], outputs: [], stateMutability: "nonpayable" },
  { type: "function", name: "endProjectWithdraw", inputs: [], outputs: [], stateMutability: "nonpayable" },
  { type: "function", name: "endVote", inputs: [], outputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "financersDonations",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint96", internalType: "uint96" }],
    stateMutability: "view",
  },
  { type: "function", name: "fundProject", inputs: [], outputs: [], stateMutability: "payable" },
  {
    type: "function",
    name: "getCurrentProjectStepId",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentProjectStepIndex",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVote",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BlockFundingProject.SimplifiedVote",
        components: [
          { name: "stepNumber", type: "uint96", internalType: "uint96" },
          { name: "askedAmountToAddForStep", type: "uint96", internalType: "uint96" },
          { name: "endVoteDate", type: "uint96", internalType: "uint96" },
          { name: "hasVoteBeenValidated", type: "bool", internalType: "bool" },
          { name: "isVoteRunning", type: "bool", internalType: "bool" },
          { name: "voteType", type: "uint8", internalType: "enum BlockFundingProject.VoteType" },
          { name: "hasFinancerVoted", type: "bool", internalType: "bool" },
          { name: "votePowerInFavorOfProposal", type: "uint256", internalType: "uint256" },
          { name: "votePowerAgainstProposal", type: "uint256", internalType: "uint256" },
          { name: "totalVotePower", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVoteEndDate",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVoteId",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVotePower",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentVotePowerAgainstProposal",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BlockFundingProject.ProjectData",
        components: [
          { name: "campaignStartingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "campaignEndingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "estimatedProjectReleaseDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "targetWallet", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "totalFundsHarvested", type: "uint96", internalType: "uint96" },
          { name: "projectCategory", type: "uint8", internalType: "enum BlockFunding.ProjectCategory" },
          { name: "name", type: "string", internalType: "string" },
          { name: "subtitle", type: "string", internalType: "string" },
          { name: "description", type: "string", internalType: "string" },
          { name: "mediaURI", type: "string", internalType: "string" },
          {
            name: "teamMembers",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.TeamMember[]",
            components: [
              { name: "firstName", type: "string", internalType: "string" },
              { name: "lastName", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "photoLink", type: "string", internalType: "string" },
              { name: "role", type: "string", internalType: "string" },
              { name: "walletAddress", type: "address", internalType: "address" },
            ],
          },
          {
            name: "projectSteps",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.ProjectStep[]",
            components: [
              { name: "name", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "amountNeeded", type: "uint96", internalType: "uint96" },
              { name: "amountFunded", type: "uint96", internalType: "uint96" },
              { name: "isFunded", type: "bool", internalType: "bool" },
              { name: "orderNumber", type: "uint8", internalType: "uint8" },
              { name: "hasBeenValidated", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFinancerDonationAmount",
    inputs: [{ name: "financerAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFundingRequested",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMessages",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct BlockFundingProject.Message[]",
        components: [
          { name: "writerWallet", type: "address", internalType: "address" },
          { name: "ipfsCID", type: "string", internalType: "string" },
          { name: "timestamp", type: "uint32", internalType: "uint32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getName",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOwner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTotalVotePower",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_data",
        type: "tuple",
        internalType: "struct BlockFundingProject.ProjectData",
        components: [
          { name: "campaignStartingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "campaignEndingDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "estimatedProjectReleaseDateTimestamp", type: "uint32", internalType: "uint32" },
          { name: "targetWallet", type: "address", internalType: "address" },
          { name: "owner", type: "address", internalType: "address" },
          { name: "totalFundsHarvested", type: "uint96", internalType: "uint96" },
          { name: "projectCategory", type: "uint8", internalType: "enum BlockFunding.ProjectCategory" },
          { name: "name", type: "string", internalType: "string" },
          { name: "subtitle", type: "string", internalType: "string" },
          { name: "description", type: "string", internalType: "string" },
          { name: "mediaURI", type: "string", internalType: "string" },
          {
            name: "teamMembers",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.TeamMember[]",
            components: [
              { name: "firstName", type: "string", internalType: "string" },
              { name: "lastName", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "photoLink", type: "string", internalType: "string" },
              { name: "role", type: "string", internalType: "string" },
              { name: "walletAddress", type: "address", internalType: "address" },
            ],
          },
          {
            name: "projectSteps",
            type: "tuple[]",
            internalType: "struct BlockFundingProject.ProjectStep[]",
            components: [
              { name: "name", type: "string", internalType: "string" },
              { name: "description", type: "string", internalType: "string" },
              { name: "amountNeeded", type: "uint96", internalType: "uint96" },
              { name: "amountFunded", type: "uint96", internalType: "uint96" },
              { name: "isFunded", type: "bool", internalType: "bool" },
              { name: "orderNumber", type: "uint8", internalType: "uint8" },
              { name: "hasBeenValidated", type: "bool", internalType: "bool" },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isCurrentVoteRunning",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isFinancer",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLastVoteValidated",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isProjectCanceled",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isProjectCanceledOrLastStepValidated",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isProjectFundedd",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isWithdrawCurrentStepAvailable",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isWithdrawEndProjectAvailable",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isWithdrawProjectCanceledAvailable",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isWithdrawProjectNotFundedAvailable",
    inputs: [{ name: "userAddress", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "messages",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "writerWallet", type: "address", internalType: "address" },
      { name: "ipfsCID", type: "string", internalType: "string" },
      { name: "timestamp", type: "uint32", internalType: "uint32" },
    ],
    stateMutability: "view",
  },
  { type: "function", name: "projectNotFundedWithdraw", inputs: [], outputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "projectStepsOrderedIndex",
    inputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sendVote",
    inputs: [{ name: "vote", type: "bool", internalType: "bool" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startVote",
    inputs: [{ name: "voteType", type: "uint8", internalType: "enum BlockFundingProject.VoteType" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "teamMembersAddresses",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwner",
    inputs: [{ name: "_newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  { type: "function", name: "withdrawCurrentStep", inputs: [], outputs: [], stateMutability: "nonpayable" },
  { type: "function", name: "withdrawProjectCanceled", inputs: [], outputs: [], stateMutability: "nonpayable" },
  {
    type: "event",
    name: "ContributionAddedToProject",
    inputs: [
      { name: "contributor", type: "address", indexed: true, internalType: "address" },
      { name: "amountInWei", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FundsWithdrawn",
    inputs: [
      { name: "targetAddress", type: "address", indexed: true, internalType: "address" },
      { name: "withdrawnAmout", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "HasVoted",
    inputs: [
      { name: "voterAddress", type: "address", indexed: true, internalType: "address" },
      { name: "voteId", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "vote", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint64", indexed: false, internalType: "uint64" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewMessage",
    inputs: [{ name: "writer", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProjectIsFunded",
    inputs: [
      { name: "contributor", type: "address", indexed: true, internalType: "address" },
      { name: "fundedAmoutInWei", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VoteEnded",
    inputs: [
      { name: "voteId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "result", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VoteStarted",
    inputs: [
      { name: "voteId", type: "uint256", indexed: true, internalType: "uint256" },
      { name: "voteType", type: "uint8", indexed: false, internalType: "enum BlockFundingProject.VoteType" },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyVoted", inputs: [{ name: "voterAddress", type: "address", internalType: "address" }] },
  { type: "error", name: "AmountAskedTooHigh", inputs: [] },
  { type: "error", name: "CantCancelProjectAtTheLastStep", inputs: [] },
  { type: "error", name: "ConditionsForEndingVoteNoteMeetedYet", inputs: [] },
  { type: "error", name: "CurrentStepFundsAlreadyWithdrawn", inputs: [] },
  { type: "error", name: "EmptyString", inputs: [{ name: "parameterName", type: "string", internalType: "string" }] },
  { type: "error", name: "FailWithdrawTo", inputs: [{ name: "to", type: "address", internalType: "address" }] },
  {
    type: "error",
    name: "FinancerOrTeamMemberUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "FinancerUnauthorizedAccount", inputs: [{ name: "account", type: "address", internalType: "address" }] },
  { type: "error", name: "FundingAmountIsTooLow", inputs: [] },
  {
    type: "error",
    name: "FundingIsEnded",
    inputs: [
      { name: "currentDate", type: "uint256", internalType: "uint256" },
      { name: "campaignEndDate", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "FundingIsntEndedYet",
    inputs: [
      { name: "currentDate", type: "uint256", internalType: "uint256" },
      { name: "campaignEndDate", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "GivenTargetWalletAddressIsEmpty", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "LastStepOfProjectNotValidatedYet", inputs: [] },
  { type: "error", name: "MissingInformationForTeamMember", inputs: [] },
  { type: "error", name: "NoVoteRunning", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  { type: "error", name: "OnlyFinancersCanModifyThisVote", inputs: [] },
  { type: "error", name: "OnlyTeamMembersCanModifyThisVote", inputs: [] },
  { type: "error", name: "OwnableInvalidOwner", inputs: [{ name: "owner", type: "address", internalType: "address" }] },
  { type: "error", name: "OwnableUnauthorizedAccount", inputs: [{ name: "account", type: "address", internalType: "address" }] },
  { type: "error", name: "ProjectBalanceIsEmpty", inputs: [] },
  { type: "error", name: "ProjectHasBeenCanceled", inputs: [] },
  { type: "error", name: "ProjectHasntBeenCanceled", inputs: [] },
  { type: "error", name: "ProjectIsFundedYouCantWithdrawNow", inputs: [] },
  { type: "error", name: "ProjectIsntEndedYet", inputs: [] },
  { type: "error", name: "ProjectIsntFunded", inputs: [] },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  { type: "error", name: "TargetWalletSameAsTeamMember", inputs: [] },
  { type: "error", name: "TeamMemberUnauthorizedAccount", inputs: [{ name: "account", type: "address", internalType: "address" }] },
  { type: "error", name: "UseDedicatedMethodToStartAskFundsVote", inputs: [] },
  { type: "error", name: "VoteIsAlreadyRunning", inputs: [] },
  { type: "error", name: "VoteTimeEnded", inputs: [{ name: "voteTimeEndTimestamp", type: "uint256", internalType: "uint256" }] },
];
